<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.agilog.interfaces.JpMapperInterface">
	<!-- 의사 정보 -->
	<select id="getDoctorInfo" parameterType="com.agilog.beans.DoctorBean" resultType="com.agilog.beans.DoctorBean">
	 SELECT DO_CODE AS DOCODE, DO_NAME AS DONAME, DO_COCODE AS COCODE FROM DO WHERE DO_COCODE = #{coCode}
	</select>
	<select id="isDoctorCode" parameterType="com.agilog.beans.DoctorBean" resultType="int">
	 SELECT COUNT(*) FROM DO WHERE DO_COCODE = #{coCode} AND DO_CODE = #{doCode}
	</select>
	<!-- 의사 인증 비밀번호 -->
	<select id="isDoctorMember" parameterType="com.agilog.beans.DoctorBean" resultType="com.agilog.beans.DoctorBean">
		SELECT DO_PASSWORD AS DOPASSWORD FROM DO WHERE DO_CODE = #{doCode} AND DO_COCODE = #{coCode}
	</select>

	<!-- 의사코드 중복검사 -->
	<select id="checkDoctorCode" parameterType="com.agilog.beans.DoctorBean" resultType="String">
		SELECT COUNT(*) FROM DO WHERE DO_CODE = #{doCode}
	</select>
	<!-- 의사 추가 -->
	<insert id="insDoctorInfo" parameterType="com.agilog.beans.DoctorBean">
		INSERT INTO DO
			  (DO_CODE,DO_COCODE,DO_NAME, DO_PASSWORD)
		VALUES(#{doCode},#{coCode},#{doName},#{doPassword})
	</insert>
	<!-- 의사 소견 입력 -->
	<update id="updDoctorComment" parameterType="com.agilog.beans.ReservationBean">
		UPDATE RE SET RE_COMMENT = #{doComment}, RE_RCCODE = 'MC' WHERE RE_CODE = #{resCode}
	</update>
	
	<!-- 의사 삭제 -->
	<delete id="delDoctorInfo" parameterType="com.agilog.beans.DoctorBean">
		DELETE FROM DO WHERE DO_COCODE = #{coCode} AND DO_CODE = #{doCode}
	</delete>
	<!-- 해당 의사별 예약정보 불러오기 View -->
	<select id="getPatientInfoList" parameterType="com.agilog.beans.DoctorBean" resultType="com.agilog.beans.ReservationBean">
	  SELECT RECODE AS RESCODE,
	   		  RESDATE,
	   		  RESACCESS,
	   		  BB_CODE AS RESBBCODE,
	   		  BB_NAME AS RESBBNAME,
	   		  RESACTIONNAME,
	   		  DOCOMMENT
	   FROM RESERVATIONFORDOC INNER JOIN BB ON RESBBSUCODE = BB_SUCODE AND RESBBCODE = BB_CODE
	   WHERE RESDOCODE = #{doCode} AND (RCCODE = 'CP' OR RCCODE = 'MC')
	</select>
	<!-- 환자 건강기록 전체 조회 -->
	<select id="getHealthDataList" parameterType="com.agilog.beans.ReservationBean" resultType="com.agilog.beans.HealthDiaryBean">
	<![CDATA[  
		 SELECT * FROM HEALTHDATAFORDOC
		 WHERE RESCODE = #{resCode} AND BBCODE = #{resBbCode} AND ROWNUM <8
		 ORDER BY HDDATE DESC
	]]> 		
	 
	</select>
	<select id="getPatientComment" parameterType="com.agilog.beans.ReservationBean" resultType="com.agilog.beans.ReservationBean">
		SELECT RE_CODE AS RESCODE, RE_COMMENT AS DOCOMMENT, RE_DOCODE AS RESDOCODE FROM RE WHERE RE_CODE = #{resCode}
	</select>
	
	
	<select id="getPatInfo" parameterType="com.agilog.beans.ReservationBean" resultType="com.agilog.beans.ReservationBean">
		SELECT RE_BBCODE AS RESBBCODE FROM RE WHERE RE_CODE = #{resCode}
	</select>
	<!-- 공개여부 -->
	<select id="isPrivateData" parameterType="com.agilog.beans.ReservationBean" resultType="int">
		SELECT RE_ACCESS FROM RE WHERE RE_CODE = #{resCode} AND RE_DOCOCODE = #{resCoCode}
	</select>
	<!-- 예약여부 -->
	<select id="isResOpenData" parameterType="com.agilog.beans.ReservationBean" resultType="String">
		SELECT RE_RCCODE FROM RE WHERE RE_CODE = #{resCode}  AND RE_BBCODE = #{resBbCode} AND (RE_RCCODE = 'CP'OR RE_RCCODE ='MC')
	</select>
	
	
	
	
	<!-- 정보게시판 글의 총 갯수 조회 -->
	<select id="InfoCount" parameterType="com.agilog.beans.PostBean" resultType="int">
	    SELECT COUNT(*) FROM IB
	</select>
	<!-- 자유게시판 글의 총 갯수 조회 -->
	<select id="fInfoCount" parameterType="com.agilog.beans.PostBean" resultType="int">
	    SELECT COUNT(*) FROM FB
	</select>
	

	<select id="getBebeInfo" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
		SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
			SELECT IB_CODE AS IBCODE,
				   TO_CHAR(IB_DATE,'yyyy.mm.dd') AS IBDATE,
				   IB_TITLE AS IBTITLE,
				   IB_CONTENT AS IBCONTENT,
				   IB_VIEW AS IBVIEW,
				   IB_LIKE AS LIKES
			FROM INFOBOARD ORDER BY IBDATE DESC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
	
	<!-- 육아정보 게시판 리스트 불러오기 오래된 순 정렬 -->
	<select id="getBebeInfoOld" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	    SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
	    SELECT IB_CODE AS IBCODE,
		   TO_CHAR(IB_DATE, 'yyyy.mm.dd') AS IBDATE,
		   IB_TITLE AS IBTITLE,
		   IB_CONTENT AS IBCONTENT,
		   IB_VIEW AS IBVIEW,
		   IB_LIKE AS LIKES
		FROM INFOBOARD
		ORDER BY IBDATE ASC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
		<!-- 육아정보 게시판 리스트 불러오기 좋아요 순 정렬 -->
	<select id="getBebeInfoLike" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	   SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
	    SELECT IB_CODE AS IBCODE,
		   TO_CHAR(IB_DATE, 'yyyy.mm.dd') AS IBDATE,
		   IB_TITLE AS IBTITLE,
		   IB_CONTENT AS IBCONTENT,
		   IB_VIEW AS IBVIEW,
		   IB_LIKE AS LIKES
		FROM INFOBOARD
		ORDER BY IB_LIKE DESC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
		<!-- 육아정보 게시판 리스트 불러오기 조회수 순 정렬 -->
	<select id="getBebeInfoView" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	    SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
	    SELECT IB_CODE AS IBCODE,
		   TO_CHAR(IB_DATE, 'yyyy.mm.dd') AS IBDATE,
		   IB_TITLE AS IBTITLE,
		   IB_CONTENT AS IBCONTENT,
		   IB_VIEW AS IBVIEW,
		   IB_LIKE AS LIKES
		FROM INFOBOARD
		ORDER BY IBVIEW DESC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
	<!-- 정보게시판 게시글 보기 -->
	<select id="getBebePost" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	   SELECT IB_CODE AS IBCODE,
		      IB_DATE AS IBDATE,
		      IB_TITLE AS IBTITLE,
		      IB_CONTENT AS IBCONTENT,
		      IB_VIEW AS IBVIEW,
		      IB_LIKE AS LIKES
	   FROM INFOBOARD
	   WHERE IB_CODE = #{ibCode}
	</select>
	
	
	<!-- 자유게시판 정렬 -->
	<select id="getFreeInfo" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
		SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
			SELECT * FROM FBPOSTLIST ORDER BY FBDATE DESC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
	
	<!-- 육아정보 게시판 리스트 불러오기 오래된 순 정렬 -->
	<select id="getFreeInfoOld" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	   	SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
		SELECT * FROM FBPOSTLIST ORDER BY FBDATE ASC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
		<!-- 육아정보 게시판 리스트 불러오기 좋아요 순 정렬 -->
	<select id="getFreeInfoLike" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	   	SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
		SELECT * FROM FBPOSTLIST ORDER BY LIKES DESC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
		<!-- 육아정보 게시판 리스트 불러오기 조회수 순 정렬 -->
	<select id="getFreeInfoView" parameterType="com.agilog.beans.PostBean" resultType="com.agilog.beans.PostBean">
	    SELECT*FROM(SELECT ROWNUM AS NUM, A.*
		FROM(
		SELECT * FROM FBPOSTLIST ORDER BY FBVIEW DESC
		) A)WHERE NUM BETWEEN 1+10*(#{pageNum}-1) AND 10*#{pageNum}
	</select>
	
	
	
	
	<!-- 감성일기 최신순 -->
	<select id="getDailyDiaryFeedNew"  resultType="com.agilog.beans.DailyDiaryBean">
		SELECT DD_CODE AS DDCODE,
		       TO_CHAR(DD_DATE,'YYYY-MM-DD HH:MI') AS DDDATE,
		       DD_CONTENT AS  DDCONTENT,
		       TO_NUMBER(DD_LIKE) AS LIKES,
		       DP_LINK AS DPLINK
		FROM DAILYDIARY LEFT OUTER JOIN DAILYDIARYPHOTO ON DD_CODE = DP_DDCODE
		WHERE DD_STATUS = '1'
		ORDER BY DD_DATE DESC
	</select>
	<!-- 감성일기 오래된순 -->
	<select id="getDailyDiaryFeedOld"  resultType="com.agilog.beans.DailyDiaryBean">
		SELECT DD_CODE AS DDCODE,
		       TO_CHAR(DD_DATE,'YYYY-MM-DD HH:MI') AS DDDATE,
		       DD_CONTENT AS  DDCONTENT,
		       TO_NUMBER(DD_LIKE) AS LIKES,
		       DP_LINK AS DPLINK
		FROM DAILYDIARY LEFT OUTER JOIN DAILYDIARYPHOTO ON DD_CODE = DP_DDCODE
		WHERE DD_STATUS = '1'
		ORDER BY DD_DATE ASC
	</select>
	<!-- 감성일기 좋아요순 -->
	<select id="getDailyDiaryFeedLike"  resultType="com.agilog.beans.DailyDiaryBean">
		SELECT DD_CODE AS DDCODE,
		       TO_CHAR(DD_DATE,'YYYY-MM-DD HH:MI') AS DDDATE,
		       DD_CONTENT AS  DDCONTENT,
		       TO_NUMBER(DD_LIKE) AS LIKES,
		       DP_LINK AS DPLINK
		FROM DAILYDIARY LEFT OUTER JOIN DAILYDIARYPHOTO ON DD_CODE = DP_DDCODE
		WHERE DD_STATUS = '1'
		ORDER BY DD_LIKE DESC
	</select>
	
	
	
	<!-- 내피드 최신순 -->
	<select id="getMyDailyDiaryFeedNew" parameterType="com.agilog.beans.DailyDiaryBean"  resultType="com.agilog.beans.DailyDiaryBean">
		SELECT DD_CODE AS DDCODE,
		       TO_CHAR(DD_DATE,'YYYY-MM-DD HH:MI') AS DDDATE,
		       DD_CONTENT AS  DDCONTENT,
		       TO_NUMBER(DD_LIKE) AS LIKES,
		       DP_LINK AS DPLINK
		FROM DAILYDIARY LEFT OUTER JOIN DAILYDIARYPHOTO ON DD_CODE = DP_DDCODE
		WHERE DD_SUCODE = #{ddSuCode}
		ORDER BY DD_LIKE DESC
	</select>
	<!-- 내피드 오래된순 -->
	<select id="getMyDailyDiaryFeedOld"  parameterType="com.agilog.beans.DailyDiaryBean" resultType="com.agilog.beans.DailyDiaryBean">
		SELECT DD_CODE AS DDCODE,
		       TO_CHAR(DD_DATE,'YYYY-MM-DD HH:MI') AS DDDATE,
		       DD_CONTENT AS  DDCONTENT,
		       TO_NUMBER(DD_LIKE) AS LIKES,
		       DP_LINK AS DPLINK
		FROM DAILYDIARY LEFT OUTER JOIN DAILYDIARYPHOTO ON DD_CODE = DP_DDCODE
		WHERE DD_SUCODE = #{ddSuCode}
		ORDER BY DD_DATE ASC
	</select>
	<!-- 내피드 좋아요순 -->
	<select id="getMyDailyDiaryFeedLike"  parameterType="com.agilog.beans.DailyDiaryBean" resultType="com.agilog.beans.DailyDiaryBean">
		SELECT DD_CODE AS DDCODE,
		       TO_CHAR(DD_DATE,'YYYY-MM-DD HH:MI') AS DDDATE,
		       DD_CONTENT AS  DDCONTENT,
		       TO_NUMBER(DD_LIKE) AS LIKES,
		       DP_LINK AS DPLINK
		FROM DAILYDIARY LEFT OUTER JOIN DAILYDIARYPHOTO ON DD_CODE = DP_DDCODE
		WHERE DD_SUCODE = #{ddSuCode}
		ORDER BY DD_LIKE DESC
	</select>
	
	
	<update id="insBoardView" parameterType="com.agilog.beans.PostBean">
	UPDATE IB SET IB_VIEW = #{ibView} WHERE IB_CODE = #{ibCode}
	</update>
</mapper>
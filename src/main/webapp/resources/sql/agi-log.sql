-- TABLE

-- 1 소셜
    -- 1-1 회원테이블
    CREATE TABLE "SOCIALUSER" (
        "SU_CODE"	    NVARCHAR2(50)		NOT NULL,
        "SU_NAME"	    NVARCHAR2(500)		NOT NULL,
        "SU_PHONE"	    NVARCHAR2(500)		NOT NULL,
        "SU_EMAIL"	    NVARCHAR2(500)		NOT NULL,
        "SU_NICKNAME"	NVARCHAR2(20)		NOT NULL,
        "SU_PHOTO" 		NVARCHAR2(20)				, 
		"SU_THEME" 		NVARCHAR2(20) 				, 
		"SU_ADDRESS" 	NVARCHAR2(20) 		NOT NULL 
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE SOCIALUSER
    ADD CONSTRAINT PK_SU PRIMARY KEY (SU_CODE);
    
    -- SYNONYM
    CREATE SYNONYM SU FOR SOCIALUSER;
    
    
    
    
    -- 1-2 소셜회원 기록
    CREATE TABLE "AUTHLOG" (
        "AL_DATE"	DATE		NOT NULL,
        "AL_ACTION"	NUMBER(1)		NOT NULL,
        "AL_SUCODE"	NVARCHAR2(50)	DEFAULT SYSDATE	NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE AUTHLOG 
    ADD CONSTRAINT PK_AL_CO_AC_DATE PRIMARY KEY (AL_DATE, AL_ACTION, AL_SUCODE)
    ADD CONSTRAINT FK_AL_SU FOREIGN KEY (AL_SUCODE) REFERENCES SOCIALUSER (SU_CODE);
    
    -- SYNONYM
    CREATE SYNONYM AL FOR AUTHLOG;
    
    
    
    -- 1-3 소셜회원 아기 
    CREATE TABLE "BABY" (
        "BB_CODE"	    NCHAR(2)		NOT NULL,
        "BB_SUCODE"	    NVARCHAR2(50)	NOT NULL,
        "BB_NAME"	    NVARCHAR2(20)	NOT NULL,
        "BB_BIRTHDAY"	DATE			NOT NULL,
        "BB_PHOTO" 		NVARCHAR2(20)			 
    )TABLESPACE USERS;

    -- CONSTRAINT : PK + FK
    ALTER TABLE BABY 
    ADD CONSTRAINT PK_BB_SU PRIMARY KEY (BB_CODE, BB_SUCODE)
    ADD CONSTRAINT FK_BB_SU FOREIGN KEY (BB_SUCODE) REFERENCES SOCIALUSER (SU_CODE);
    
    -- SYNONYM
    CREATE SYNONYM BB FOR BABY;
        
    

-- 2 감성일기
    -- 2-1 감성일기 테이블
    CREATE TABLE "DAILYDIARY" (
        "DD_CODE"	    NVARCHAR2(10)		NOT NULL,
        "DD_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "DD_SUCODE"	    NVARCHAR2(50)		NOT NULL,
        "DD_STASUS"	    NCHAR(1)		NOT NULL,
        "DD_CONTENT"	NVARCHAR2(1000)		NOT NULL,
        "DD_VIEW"	    NUMBER(10)		NOT NULL,
        "DD_LIKE"	    NUMBER(10)		NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE DAILYDIARY
    ADD CONSTRAINT PK_DD_DATE_SU PRIMARY KEY (DD_CODE, DD_DATE, DD_SUCODE)
    ADD CONSTRAINT FK_DD_SU FOREIGN KEY (DD_SUCODE) REFERENCES SOCIALUSER (SU_CODE);
    
    -- SYNONYM
    CREATE SYNONYM DD FOR DAILYDIARY;
    
    
    
    -- 2-2 감성일기 댓글
    CREATE TABLE "DAILYDIARYCOMMENT" (
        "DC_CODE"	    NVARCHAR2(10)		NOT NULL,
        "DC_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "DC_DDCODE"	    NVARCHAR2(10)		NOT NULL,
        "DC_DDSUCODE"	NVARCHAR2(50)		NOT NULL,
        "DC_DDDATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "DC_SUCODE"	    NVARCHAR2(50)		NOT NULL,
        "DC_CONTENT"	NVARCHAR2(1000)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE DAILYDIARYCOMMENT 
    ADD CONSTRAINT PK_DC_DATE_DD_SU PRIMARY KEY (DC_CODE, DC_DATE, DC_DDCODE, DC_DDSUCODE, DC_DDDATE, DC_SUCODE)
    ADD CONSTRAINT FK_DC_DD_SU_DATE FOREIGN KEY (DC_DDCODE, DC_DDSUCODE, DC_DDDATE) REFERENCES DAILYDIARY (DD_CODE, DD_SUCODE, DD_DATE)
    ADD CONSTRAINT FK_DC_SU FOREIGN KEY (DC_SUCODE) REFERENCES SOCIALUSER (SU_CODE);
    
    -- SYNONYM
    CREATE SYNONYM DC FOR DAILYDIARYCOMMENT;
    
    
    
    -- 2-3 감성일기 사진
    CREATE TABLE "DAILYDIARYPHOTO" (
        "DP_CODE"	    NVARCHAR2(100)		NOT NULL,
        "DP_DDCODE"	    NVARCHAR2(10)		NOT NULL,
        "DP_DDSUCODE"	NVARCHAR2(50)		NOT NULL,
        "DP_DDDATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "DP_LINK"	    NVARCHAR2(500)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE DAILYDIARYPHOTO 
    ADD CONSTRAINT PK_DP_DD_SU_DATE PRIMARY KEY (DP_CODE, DP_DDCODE, DP_DDSUCODE, DP_DDDATE)
    ADD CONSTRAINT FK_DP_DD_SU_DATE FOREIGN KEY (DP_DDCODE, DP_DDSUCODE, DP_DDDATE) REFERENCES DAILYDIARY (DD_CODE, DD_SUCODE, DD_DATE);
    
    -- SYNONYM
    CREATE SYNONYM DP FOR DAILYDIARYPHOTO;
    
    
    
    -- 2-4 감성일기 좋아요
    CREATE TABLE "DAILYDIARYLIKE" (
        "DL_DDCODE"	NVARCHAR2(10)		NOT NULL,
        "DL_DDSUCODE"	NVARCHAR2(50)		NOT NULL,
        "DL_DDDATE"	DATE	DEFAULT SYSDATE	NOT NULL,
        "DL_SUCODE"	NVARCHAR2(50)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE DAILYDIARYLIKE 
    ADD CONSTRAINT PK_DL_DD_SU_DATE PRIMARY KEY (DL_DDCODE, DL_DDSUCODE, DL_DDDATE, DL_SUCODE)
    ADD CONSTRAINT FK_DL_DD FOREIGN KEY (DL_DDCODE, DL_DDSUCODE, DL_DDDATE) REFERENCES DAILYDIARY (DD_CODE, DD_SUCODE, DD_DATE)
    ADD CONSTRAINT FK_DL_SU FOREIGN KEY (DL_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM DL FOR DAILYDIARYLIKE;
    
    
    
    -- 2-5 감성일기 해쉬태그 : 구현 못함
    CREATE TABLE "HASHTAG" (
        "HT_DDCODE"	    NVARCHAR2(10)		NOT NULL,
        "HT_DDSUCODE"	NVARCHAR2(50)		NOT NULL,
        "HT_DDDATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "HT_NAME"	    NVARCHAR2(20)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK (열명 중)
    ALTER TABLE HASHTAG 
    ADD CONSTRAINT PK_HT_DD_SU_DATE_NAME PRIMARY KEY (HT_DDCODE, HT_DDSUCODE, HT_DDDATE, HT_NAME)
    ADD CONSTRAINT FK_HT_DD_SU_DATE FOREIGN KEY (HT_DDCODE, HT_DDSUCODE, HT_DDDATE) REFERENCES DAILYDIARY (DD_CODE, DD_SUCODE, DD_DATE);

    -- SYNONYM
    CREATE SYNONYM HT FOR HASHTAG;
    
    

-- 3 건강일기
    -- 3-1 건강일기 카테고리
    CREATE TABLE "CATEGORY" (
        "CA_CODE"	NCHAR(2)		NOT NULL,
        "CA_NAME"	NVARCHAR2(20)		NOT NULL,
        "CA_TYPE"	NVARCHAR2(5)		NOT NULL    -- cm, kg
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE CATEGORY 
    ADD CONSTRAINT PK_CA PRIMARY KEY (CA_CODE);

    -- SYNONYM
    CREATE SYNONYM CA FOR CATEGORY;
    
    
    
    -- 3-2 건강일기 테이블
    CREATE TABLE "HEALTHDIARY" (
        "HD_CODE"	    NVARCHAR2(10)		NOT NULL,
        "HD_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "HD_CACODE"	    NCHAR(2)		NOT NULL,
        "HD_BBSUCODE"	NVARCHAR2(50)		NOT NULL,
        "HD_BBCODE"	    NCHAR(2)		NOT NULL,
        "HD_VALUE"	    NVARCHAR2(100)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE HEALTHDIARY
    ADD CONSTRAINT PK_HD_DATE_CA_BB_SU PRIMARY KEY (HD_CODE, HD_DATE, HD_CACODE, HD_BBSUCODE, HD_BBCODE)
    ADD CONSTRAINT FK_HD_CA FOREIGN KEY (HD_CACODE) REFERENCES CATEGORY (CA_CODE)
    ADD CONSTRAINT FK_HD_BB_SU FOREIGN KEY (HD_BBSUCODE, HD_BBCODE) REFERENCES BABY (BB_SUCODE, BB_CODE);

    -- SYNONYM
    CREATE SYNONYM HD FOR HEALTHDIARY;
    
    
    
-- 4 자유게시판
    -- 4-1 자유게시판 테이블
    CREATE TABLE "FREEBOARD" (
        "FB_CODE"	    NVARCHAR2(10)		NOT NULL,
        "FB_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "FB_SUCODE"	    NVARCHAR2(50)		NOT NULL,
        "FB_TITLE"	    NVARCHAR2(100)		NOT NULL,
        "FB_CONTENT"	NVARCHAR2(5000)		NOT NULL,
        "FB_VIEW"	    NUMBER(10)		NOT NULL,
        "FB_LIKE"	    NUMBER(10)		NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE FREEBOARD 
    ADD CONSTRAINT PK_FB_DATE_SU PRIMARY KEY (FB_CODE, FB_DATE, FB_SUCODE)
    ADD CONSTRAINT FK_FB_SU FOREIGN KEY (FB_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM FB FOR FREEBOARD;
    
    
    
    -- 4-2 자유게시판 댓글
    CREATE TABLE "FREEBOARDCOMMENT" (
        "FC_CODE"	    NVARCHAR2(10)		NOT NULL,
        "FC_FBCODE"	    NVARCHAR2(10)		NOT NULL,
        "FC_FBSUCODE"	NVARCHAR2(50)		NOT NULL,
        "FC_FBDATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "FC_SUCODE"	    NVARCHAR2(50)		NOT NULL,
        "FC_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "FC_CONTENT"	NVARCHAR2(1000)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE FREEBOARDCOMMENT 
    ADD CONSTRAINT PK_FC_FB_SU_DATE_SU PRIMARY KEY (FC_CODE, FC_FBCODE, FC_FBSUCODE, FC_FBDATE, FC_SUCODE)
    ADD CONSTRAINT FK_FC_FB_SU_DATE FOREIGN KEY (FC_FBCODE, FC_FBSUCODE, FC_FBDATE) REFERENCES FREEBOARD (FB_CODE, FB_SUCODE, FB_DATE)
    ADD CONSTRAINT FK_FC_SU FOREIGN KEY (FC_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM FC FOR FREEBOARDCOMMENT;
    
    
    
    -- 4-3 자유게시판 사진
    CREATE TABLE "FREEBOARDPHOTO" (
        "FP_CODE"	    NUMBER(2)		NOT NULL,
        "FP_FBCODE"	    NVARCHAR2(10)		NOT NULL,
        "FP_FBSUCODE"	NVARCHAR2(50)		NOT NULL,
        "FP_FBDATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "FP_LINK"	    NVARCHAR2(500)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE FREEBOARDPHOTO 
    ADD CONSTRAINT PK_FP_FB_SU_DATE PRIMARY KEY (FP_CODE, FP_FBCODE, FP_FBSUCODE, FP_FBDATE)
    ADD CONSTRAINT FK_FP_FB_SU_DATE FOREIGN KEY (FP_FBCODE, FP_FBSUCODE, FP_FBDATE) REFERENCES FREEBOARD (FB_CODE, FB_SUCODE, FB_DATE);

    -- SYNONYM
    CREATE SYNONYM FP FOR FREEBOARDPHOTO;
    
    
    
    -- 4-4 자유게시판 좋아요
    CREATE TABLE "FREEBOARDLIKE" (
        "FL_FBCODE"	    NVARCHAR2(10)		NOT NULL,
        "FL_FBSUCODE"	NVARCHAR2(50)		NOT NULL,
        "FL_FBDATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "FL_SUCODE"	    NVARCHAR2(50)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE FREEBOARDLIKE 
    ADD CONSTRAINT PK_FL_FB_SU_DATE PRIMARY KEY (FL_FBCODE, FL_FBSUCODE, FL_FBDATE, FL_SUCODE)
    ADD CONSTRAINT FK_FL_FB_SU_DATE FOREIGN KEY (FL_FBCODE, FL_FBSUCODE, FL_FBDATE) REFERENCES FREEBOARD (FB_CODE, FB_SUCODE, FB_DATE)
    ADD CONSTRAINT FK_FL_SU FOREIGN KEY (FL_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM FL FOR FREEBOARDLIKE;
    
        

-- 5 정보게시판
    -- 5-1 정보게시판 테이블
    CREATE TABLE "INFOBOARD" (
        "IB_CODE"	    NVARCHAR2(10)		NOT NULL,
        "IB_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "IB_TITLE"	    NVARCHAR2(100)		NOT NULL,
        "IB_CONTENT"	NVARCHAR2(5000)		NOT NULL,
        "IB_VIEW"	    NUMBER(10)		NOT NULL,
        "IB_LIKE"	    NUMBER(10)		NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE INFOBOARD 
    ADD CONSTRAINT PK_IB PRIMARY KEY (IB_CODE, IB_DATE);

    -- SYNONYM
    CREATE SYNONYM IB FOR INFOBOARD;
    
    
    
    -- 5-2 정보게시판 좋아요
    CREATE TABLE "INFOBOARDLIKE" (
        "IL_IBCODE"	NVARCHAR2(10)		NOT NULL,
        "IL_IBDATE"	DATE	DEFAULT SYSDATE	NOT NULL,
        "IL_SUCODE"	NVARCHAR2(50)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE INFOBOARDLIKE 
    ADD CONSTRAINT PK_IL_IB_DATE_SU PRIMARY KEY (IL_IBCODE, IL_IBDATE, IL_SUCODE)
    ADD CONSTRAINT FK_IL_IB_DATE FOREIGN KEY (IL_IBCODE, IL_IBDATE) REFERENCES INFOBOARD (IB_CODE, IB_DATE)
    ADD CONSTRAINT FK_IL_SU FOREIGN KEY (IL_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM IL FOR INFOBOARDLIKE;



-- 6 기타일정
    --  6-1 기타일정 테이블
    CREATE TABLE "SCHEDULE" (
        "SC_CODE"	    NVARCHAR2(10)		NOT NULL,
        "SC_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "SC_SUCODE"	    NVARCHAR2(50)		NOT NULL,
        "SC_CONTENT"	NVARCHAR2(100)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE SCHEDULE 
    ADD CONSTRAINT PK_SC_DATE_SU PRIMARY KEY (SC_CODE, SC_DATE, SC_SUCODE)
    ADD CONSTRAINT FK_SC_SU FOREIGN KEY (SC_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM SC FOR SCHEDULE;
    
    
    
-- 7 병원회원
    -- 7-1 병원회원 테이블
    CREATE TABLE "COMPANY" (
        "CO_CODE"	        NCHAR(10)			NOT NULL,
        "CO_PASSWORD"	    NVARCHAR2(500)		NOT NULL,
        "CO_MANAGERCODE"	NVARCHAR2(500)		NOT NULL,
        "CO_NAME"	        NVARCHAR2(500)		NOT NULL,
        "CO_PHONE"	        NVARCHAR2(500)		NOT NULL,
        "CO_EMAIL"	        NVARCHAR2(500)		NOT NULL,
        "CO_ADDRESS"	    NVARCHAR2(100)		NOT NULL,
        "CO_PHOTO" 			NVARCHAR2(20) 		NOT NULL 
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE COMPANY 
    ADD CONSTRAINT PK_CO PRIMARY KEY (CO_CODE);

    -- SYNONYM
    CREATE SYNONYM CO FOR COMPANY;
    
    
    
    -- 7-2 병원회원 기록
    CREATE TABLE "COMPANYLOG" (
        "CL_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
        "CL_ACTION"	NUMBER(1)		NOT NULL,
        "CL_COCODE"	NCHAR(10)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE COMPANYLOG 
    ADD CONSTRAINT PK_CL_CO_AC_DATE PRIMARY KEY (CL_DATE, CL_ACTION, CL_COCODE)
    ADD CONSTRAINT FK_CL_CO FOREIGN KEY (CL_COCODE) REFERENCES COMPANY (CO_CODE);
    
    -- SYNONYM
    CREATE SYNONYM CL FOR COMPANYLOG;    
    
    
    
    -- 7-3 병원 전문의
    CREATE TABLE "DOCTOR" (
        "DO_CODE"	    NVARCHAR2(20)		NOT NULL,
        "DO_COCODE"	    NCHAR(10)		NOT NULL,
        "DO_NAME"	    NVARCHAR2(500)		NOT NULL,
        "DO_PASSWORD"	NVARCHAR2(500)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE DOCTOR 
    ADD CONSTRAINT PK_DO_CO PRIMARY KEY (DO_CODE, DO_COCODE)
    ADD CONSTRAINT FK_DO_CO FOREIGN KEY (DO_COCODE) REFERENCES COMPANY (CO_CODE);

    -- SYNONYM
    CREATE SYNONYM DO FOR DOCTOR;
    
    
    
    -- 7-4 병원 예약 시간대
    CREATE TABLE "RESERVATIONTIME"(
        "RT_DOCOCODE"   NCHAR(10) NOT NULL,
        "RT_DATE"       DATE DEFAULT SYSDATE NOT NULL,
        "RT_TIME"       NVARCHAR2(5) NOT NULL,
        "RT_DOCODE"     NVARCHAR2(20) NOT NULL,
        "RT_COUNT"      NUMBER(1,0) NOT NULL
    )TABLESPACE USERS;

    -- CONSTRAINT : PK + FK
    ALTER TABLE RESERVATIONTIME
    ADD CONSTRAINT RT_CO_DO_DATE_TIME_PK PRIMARY KEY(RT_DOCOCODE,RT_DOCODE,RT_DATE,RT_TIME)
    ADD CONSTRAINT RT_CO_DO_FK FOREIGN KEY(RT_DOCOCODE,RT_DOCODE) REFERENCES DOCTOR(DO_COCODE, DO_CODE);

    -- SYNONYM
    CREATE SYNONYM RT FOR RESERVATIONTIME;
    
    
    
-- 8 예약 카테고리
    -- 8-1 예약 카테고리 테이블
    CREATE TABLE "RESERVATIONCATEGORY" (
        "RC_CODE"	NCHAR(2)		NOT NULL,
        "RC_NAME"	NVARCHAR2(20)		NOT NULL
    )TABLESPACE USERS;

    -- CONSTRAINT : PK + FK
    ALTER TABLE RESERVATIONCATEGORY 
    ADD CONSTRAINT PK_RC PRIMARY KEY (RC_CODE);

    -- SYNONYM
    CREATE SYNONYM RC FOR RESERVATIONCATEGORY;
    
    
    
-- 9 지도
    -- 9-1 지도 댓글
    CREATE TABLE "MAPCOMMENT" (
        "MC_CODE"	    NVARCHAR2(10)		NOT NULL,
        "MC_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "MC_COCODE"	    NCHAR(10)		NOT NULL,
        "MC_SUCODE"	    NVARCHAR2(50)		NOT NULL,
        "MC_CONTENT"	NVARCHAR2(100)		NOT NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE MAPCOMMENT 
    ADD CONSTRAINT PK_MC_DATE_CO_SU PRIMARY KEY (MC_CODE, MC_DATE, MC_COCODE, MC_SUCODE)
    ADD CONSTRAINT FK_MC_CO FOREIGN KEY (MC_COCODE) REFERENCES COMPANY (CO_CODE)
    ADD CONSTRAINT FK_MC_SU FOREIGN KEY (MC_SUCODE) REFERENCES SOCIALUSER (SU_CODE);

    -- SYNONYM
    CREATE SYNONYM MC FOR MAPCOMMENT;
    
    
    
    -- 9-2 지도 예약
    CREATE TABLE "RESERVATION" (
        "RE_CODE"	    NVARCHAR2(10)		NOT NULL,
        "RE_DATE"	    DATE	DEFAULT SYSDATE	NOT NULL,
        "RE_ACCESS"	    NCHAR(1)		NOT NULL,
        "RE_DOCOCODE"	NCHAR(10)		NOT NULL,
        "RE_DOCODE"	    NVARCHAR2(20)		NOT NULL,
        "RE_RCCODE"	    NCHAR(2)		NOT NULL,
        "RE_BBSUCODE"	NVARCHAR2(50)		NOT NULL,
        "RE_BBCODE"	    NCHAR(2)		NOT NULL,
        "RE_COMMENT"	NVARCHAR2(1000)		NULL
    )TABLESPACE USERS;
    
    -- CONSTRAINT : PK + FK
    ALTER TABLE RESERVATION
    ADD CONSTRAINT PK_RE_DATE_AC_DO_CO_RE_BB_SU PRIMARY KEY (RE_CODE, RE_DATE, RE_ACCESS, RE_DOCOCODE, RE_DOCODE, RE_RCCODE, RE_BBSUCODE, RE_BBCODE)
    ADD CONSTRAINT FK_RE_DO_CO FOREIGN KEY (RE_DOCOCODE, RE_DOCODE) REFERENCES DOCTOR (DO_COCODE, DO_CODE)
    ADD CONSTRAINT FK_RE_RC FOREIGN KEY (RE_RCCODE) REFERENCES RESERVATIONCATEGORY (RC_CODE)
    ADD CONSTRAINT FK_RE_SU_BB FOREIGN KEY (RE_BBSUCODE, RE_BBCODE) REFERENCES BABY (BB_SUCODE, BB_CODE);

    -- SYNONYM
    CREATE SYNONYM RE FOR RESERVATION;
    
    
    
COMMIT;

-- VIEW

    --세션에 저장할 유저 정보 조회 뷰
    CREATE OR REPLACE VIEW ACCESSINFO AS
    SELECT  SU_CODE AS SUCODE,
            SU_NAME AS SUNAME,
            SU_PHONE AS SUPHONE,
            SU_EMAIL AS SUEMAIL,
            SU_NICKNAME AS SUNICKNAME
    FROM SU;
    
    --유저 아이정보 조회 뷰
    CREATE OR REPLACE VIEW TOTALBABYINFO AS
    SELECT  BB_CODE AS BBCODE,
            BB_SUCODE AS SUCODE,
            BB_NAME AS BBNAME,
            BB_BIRTHDAY AS BBBIRTHDAY
    FROM BB;
    
    --건강일기 리스트 뷰
    CREATE OR REPLACE VIEW HEALTHDIARYLIST AS
    SELECT  HD_CODE AS HDCODE,
            HD_DATE AS HDDATE,
            HD_BBSUCODE AS SUCODE,
            HD_BBCODE AS BBCODE,
            BB_NAME AS BBNAME
    FROM HD INNER JOIN BB ON BB_CODE = HD_BBCODE AND BB_SUCODE = HD_BBSUCODE
    GROUP BY HD_CODE, HD_DATE, HD_BBSUCODE, HD_BBCODE, BB_NAME;
    
    --건강일기 디테일 뷰
    CREATE OR REPLACE VIEW DETAILHEALTHDIARY AS
    SELECT  HD_CODE AS HDCODE,
            TO_CHAR(HD_DATE,'YYYYMMDDHH24MISS') AS HDDATE,
            HD_BBSUCODE AS SUCODE,
            BB_CODE AS BBCODE,
            BB_NAME AS BBNAME,
            W1.WEIGHT AS BBWEIGHT,
            H2.HEIGHT AS BBHEIGHT,
            H3.HEAD AS HEAD,
            F4.FOOT AS FOOT,
            T5.TEMPERATURE AS TEMPERATURE,
            S6.SLEEP AS SLEEP,
            D7.DEFECATION AS DEFECATION,
            D8.DEFSTATUS AS DEFSTATUS,
            M9.MEAL AS MEAL,
            M10.MEMO AS MEMO
    FROM HD INNER JOIN BB ON HD_BBSUCODE = BB_SUCODE AND HD_BBCODE = BB_CODE
            LEFT OUTER JOIN HDWEIGHT W1 ON W1.HDCODE = HD_CODE AND W1.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDHEIGHT H2 ON H2.HDCODE = HD_CODE AND H2.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDHEAD H3 ON H3.HDCODE = HD_CODE AND H3.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDFOOT F4 ON F4.HDCODE = HD_CODE AND F4.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDTEMPERATURE T5 ON T5.HDCODE = HD_CODE AND T5.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDSLEEP S6 ON S6.HDCODE = HD_CODE AND S6.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDDEFECATION D7 ON D7.HDCODE = HD_CODE AND D7.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDDEFSTATUS D8 ON D8.HDCODE = HD_CODE AND D8.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDMEAL M9 ON M9.HDCODE = HD_CODE AND M9.SUCODE = HD_BBSUCODE
            LEFT OUTER JOIN HDMEMO M10 ON M10.HDCODE = HD_CODE AND M10.SUCODE = HD_BBSUCODE
    GROUP BY HD_CODE, HD_DATE, HD_BBSUCODE, BB_CODE, BB_NAME, WEIGHT, HEIGHT, HEAD, FOOT, TEMPERATURE, SLEEP, DEFECATION, DEFSTATUS, MEAL, MEMO;
    
    --건강일기 항목 뷰
    CREATE OR REPLACE VIEW HDWEIGHT
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS WEIGHT
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '01';
    
    CREATE OR REPLACE VIEW HDHEIGHT
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS HEIGHT
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '02';
    
    CREATE OR REPLACE VIEW HDHEAD
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS HEAD
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '03';
    
    CREATE OR REPLACE VIEW HDFOOT
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS FOOT
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '04';
    
    CREATE OR REPLACE VIEW HDTEMPERATURE
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS TEMPERATURE
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '05';
    
    CREATE OR REPLACE VIEW HDSLEEP
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS SLEEP
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '06';
    
    CREATE OR REPLACE VIEW HDDEFECATION
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS DEFECATION
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '07';
    
    CREATE OR REPLACE VIEW HDDEFSTATUS
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS DEFSTATUS
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '08';
    
    CREATE OR REPLACE VIEW HDMEAL
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS MEAL
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '09';
    
    CREATE OR REPLACE VIEW HDMEMO
    AS
    SELECT  CA_CODE AS CACODE,
            CA_NAME AS CANAME,
            HD_CODE AS HDCODE,
            HD_BBSUCODE AS SUCODE,
            HD_VALUE AS MEMO
    FROM CA INNER JOIN HD ON CA_CODE = HD_CACODE
    WHERE CA_CODE = '10';
    
    --의사소견 조회 뷰
    CREATE OR REPLACE VIEW COMMENTLIST AS 
    SELECT  RE_DATE AS RESDATE,
            RE_DOCOCODE AS COCODE,
            CO_NAME AS CONAME,
            RE_DOCODE AS DOCODE,
            DO_NAME AS DONAME,
            RE_BBSUCODE AS SUCODE,
            RE_BBCODE AS BBCODE,
            BB_NAME AS BBNAME,
            RE_COMMENT AS DOCOMMENT
    FROM RE INNER JOIN CO ON RE_DOCOCODE = CO_CODE
            INNER JOIN DO ON RE_DOCODE = DO_CODE AND RE_DOCOCODE = DO_COCODE
            INNER JOIN BB ON RE_BBCODE = BB_CODE AND RE_BBSUCODE = BB_SUCODE;
            
    ---- 카테고리+헬다
    CREATE OR REPLACE VIEW MYPAGEBABYINFO
    AS
    SELECT  HD_CODE,
            HD_DATE,
            HD_CACODE,
            HD_BBSUCODE,
            HD_BBCODE,
            HD_VALUE,
            CA_NAME,
            CA_TYPE
    FROM HD INNER JOIN CA ON CA.CA_CODE = HD.HD_CACODE;
    
    ---- 최신 키
    CREATE OR REPLACE VIEW BABYRECENTHEIGHT
    AS
    select HD_BBSUCODE AS HSUCODE,HD_BBCODE AS HBABYCODE ,CA_NAME, HD_VALUE AS BBHEIGHT
    FROM MYPAGEBABYINFO  
    WHERE (HD_BBSUCODE,HD_BBCODE,HD_CACODE, HD_DATE) 
                            IN (
                            SELECT HD_BBSUCODE,HD_BBCODE, HD_CACODE, MAX(HD_DATE) AS HD_DATE 
                                FROM HEALTHDIARY 
                                WHERE HD_CACODE = '02'
                                GROUP BY HD_BBSUCODE,HD_BBCODE,HD_CACODE
                           )AND CA_NAME = 'HEIGHT'
                        ORDER BY HD_BBSUCODE,HD_BBCODE,HD_CACODE;
    
    ---- 최신 몸무게
    CREATE OR REPLACE VIEW BABYRECENTWEIGHT
    AS
    select HD_BBSUCODE AS WSUCODE,HD_BBCODE AS WBABYCODE ,CA_NAME, HD_VALUE AS BBWEIGHT
                        FROM MYPAGEBABYINFO  
                        WHERE (HD_BBSUCODE,HD_BBCODE,HD_CACODE, HD_DATE) 
                        IN (
                            SELECT HD_BBSUCODE,HD_BBCODE, HD_CACODE, MAX(HD_DATE) AS HD_DATE
                                FROM HEALTHDIARY
                                WHERE HD_CACODE = '01'
                                GROUP BY HD_BBSUCODE,HD_BBCODE,HD_CACODE
                           )AND CA_NAME = 'WEIGHT'
                        ORDER BY HD_BBSUCODE,HD_BBCODE,HD_CACODE;
                        
    -- 건강 추세에 따른 테이블
    CREATE OR REPLACE VIEW HEALTHSTATUS AS
    SELECT  HD.HDCODE,
            HD.SUCODE,
            HD.HDDATE,
            HD.AGE, -- 작성당시 아이 나이
            BB.TOAGE, -- 현재 아이 나이
            BB.BBCODE,
            BB.BBNAME,
            WEIGHT.WEIGHT AS BBWEIGHT,
            HEIGHT.HEIGHT AS BBHEIGHT,
            HEAD.HEAD AS HEAD
    FROM (SELECT  HD_CODE AS HDCODE,
                  HD_BBSUCODE AS SUCODE,
                  HD_BBCODE AS BBCODE,
                  HD_DATE AS HDDATE,
                  TRUNC(MONTHS_BETWEEN(HD_DATE, TO_DATE(BB_BIRTHDAY))/12) AS AGE
          FROM HD INNER JOIN BB ON HD_BBCODE = BB_CODE AND HD_BBSUCODE = BB_SUCODE) HD 
          INNER JOIN (SELECT BB_SUCODE AS SUCODE,
                             BB_CODE AS BBCODE,
                             BB_NAME AS BBNAME,
                             TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(BB_BIRTHDAY))/12) AS TOAGE 
                      FROM BB) BB ON HD.SUCODE = BB.SUCODE AND HD.BBCODE = BB.BBCODE
          LEFT OUTER JOIN (SELECT   CA_CODE AS CACODE,
                                    CA_NAME AS CANAME,
                                    HD_CODE AS HDCODE,
                                    HD_BBSUCODE AS SUCODE,
                                    HD_VALUE AS WEIGHT
                           FROM CA  INNER JOIN HD ON CA_CODE = HD_CACODE
                           WHERE CA_CODE = '01') WEIGHT ON WEIGHT.HDCODE = HD.HDCODE AND WEIGHT.SUCODE = HD.SUCODE
          LEFT OUTER JOIN (SELECT   CA_CODE AS CACODE,
                                    CA_NAME AS CANAME,
                                    HD_CODE AS HDCODE,
                                    HD_BBSUCODE AS SUCODE,
                                    HD_VALUE AS HEIGHT
                           FROM CA  INNER JOIN HD ON CA_CODE = HD_CACODE
                           WHERE CA_CODE = '02') HEIGHT ON HEIGHT.HDCODE = HD.HDCODE AND HEIGHT.SUCODE = HD.SUCODE
          LEFT OUTER JOIN (SELECT   CA_CODE AS CACODE,
                                    CA_NAME AS CANAME,
                                    HD_CODE AS HDCODE,
                                    HD_BBSUCODE AS SUCODE,
                                    HD_VALUE AS HEAD
                           FROM CA  INNER JOIN HD ON CA_CODE = HD_CACODE
                           WHERE CA_CODE = '03') HEAD ON HEAD.HDCODE = HD.HDCODE AND HEAD.SUCODE = HD.SUCODE
    GROUP BY HD.HDCODE, HD.SUCODE, HD.HDDATE, HD.AGE, BB.BBCODE, BB.BBNAME, BB.TOAGE, WEIGHT.WEIGHT, HEIGHT.HEIGHT, HEAD.HEAD;
    
    -- 감성일기 댓글
    CREATE OR REPLACE VIEW DAILYDIARYCOMMENTLIST AS
    SELECT  SU.SU_NICKNAME AS SUNICKNAME,
            SU.SU_PHOTO AS SUPHOTO,
            DC.DC_DDCODE AS DCDDCODE,
            TO_CHAR(DC.DC_DDDATE, 'YYYYMMDDHH24MISS') AS DCDDDATE,
            DC.DC_DDSUCODE AS DCDDSUCODE,
            DC.DC_CODE AS DCCODE,
            TO_CHAR(DC.DC_DATE, 'YYYYMMDDHH24MISS') AS DCDATE,
            DC.DC_SUCODE AS DCSUCODE,
            DC.DC_CONTENT AS DCCONTENT
    FROM DD INNER JOIN DC ON DD.DD_CODE = DC.DC_DDCODE AND DD.DD_DATE = DC.DC_DDDATE AND DD.DD_SUCODE = DC.DC_DDSUCODE
            INNER JOIN SU ON DC.DC_SUCODE = SU.SU_CODE;
    
    -- 게시판 댓글
    CREATE OR REPLACE VIEW FREEBOARDCOMMENTLIST AS
    SELECT  SU.SU_NICKNAME AS SUNICKNAME,
            SU.SU_PHOTO AS SUPHOTO,
            FC.FC_CODE AS FCCODE,
            FC.FC_FBCODE AS FCFBCODE,
            FC.FC_FBSUCODE AS FCFBSUCODE,
            TO_CHAR(FC.FC_FBDATE, 'YYYYMMDDHH24MISS') AS FCFBDATE,
            FC.FC_SUCODE AS FCSUCODE,
            TO_CHAR(FC.FC_DATE, 'YYYYMMDDHH24MISS') AS FCDATE,
            FC.FC_CONTENT AS FCCONTENT
    FROM FB INNER JOIN FC ON FB.FB_CODE = FC.FC_FBCODE AND FB.FB_DATE = FC.FC_FBDATE AND FB.FB_SUCODE = FC.FC_FBSUCODE
            INNER JOIN SU ON FC.FC_SUCODE = SU.SU_CODE;
    
    
    -- 지도 댓글
    CREATE OR REPLACE VIEW MAPCOMMENTLIST AS
    SELECT  SU.SU_NICKNAME AS SUNICKNAME,
            SU.SU_PHOTO AS SUPHOTO,
            CO.CO_CODE AS COCODE,
            MC.MC_CODE AS MCCODE,
            MC.MC_SUCODE AS MCSUCODE,
            TO_CHAR(MC.MC_DATE, 'YYYYMMDDHH24MISS') AS MCDATE,
            MC.MC_CONTENT AS MCCONTENT
    FROM MC INNER JOIN SU ON MC.MC_SUCODE = SU.SU_CODE
            INNER JOIN CO ON MC.MC_COCODE = CO.CO_CODE;
            
    
    -- 예약일자별 예약자 수 MAX 6명
    CREATE OR REPLACE VIEW ISRESERVATION AS
    SELECT  ISRES.RESDATE,
            ISRES.COUNT,
            ISRES.RESCOCODE,
            ISRES.RESDOCODE
    FROM   (SELECT  TO_CHAR(RE_DATE, 'YYYYMMDDHH24') AS RESDATE,
                    COUNT(RE_DATE) AS COUNT,
                    RE_DOCOCODE AS RESCOCODE,
                    RE_DOCODE AS RESDOCODE
            FROM RE INNER JOIN RC ON RE.RE_RCCODE = RC.RC_CODE 
                    INNER JOIN BB ON RE.RE_BBCODE = BB.BB_CODE AND RE.RE_BBSUCODE = BB.BB_SUCODE
                    INNER JOIN DO ON RE.RE_DOCODE = DO.DO_CODE AND RE.RE_DOCOCODE = DO.DO_COCODE
            GROUP BY TO_CHAR(RE_DATE, 'YYYYMMDDHH24'), RE_DOCOCODE, RE_DOCODE ) ISRES
    INNER JOIN RE ON ISRES.RESCOCODE = RE.RE_DOCOCODE AND ISRES.RESDOCODE = RE.RE_DOCODE
    GROUP BY ISRES.RESDATE, ISRES.COUNT, ISRES.RESCOCODE, ISRES.RESDOCODE; 